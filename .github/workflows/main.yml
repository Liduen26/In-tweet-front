name: Build
on:
  push:
    branches: ["main", "CI"]

  pull_request:
    types: [opened, synchronize, reopened]

  workflow_dispatch:
jobs:

  tests:
    name: Tests
    runs-on: ubuntu-latest

    env:
      API_URL: api

    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js environment
        uses: actions/setup-node@v4.2.0
      
      - name: Install deps and build
        run: |
          npm install
          npm run build
      
      - name: Start Apache container manually
        run: |
          docker run -d -p 80:80 -v ${{ github.workspace }}/dist:/usr/local/apache2/htdocs --name apache_server httpd:2.4
          sleep 10  # Attendre un peu que le serveur d√©marre
        
      - name: Setting up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Need to fetch reqs if needed
      - name: Installing all necessary packages
        run: pip install python-dotenv selenium

      - name: Run e2e tests
        run: |
          python ./tests/init_test.py
          python ./tests/login_empty_credentials.py

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/in-tweet-front:latest .
          docker tag ${{ secrets.DOCKER_USERNAME }}/in-tweet-front:latest ${{ secrets.DOCKER_USERNAME }}/in-tweet-front:${{ github.sha }}

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/in-tweet-front:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/in-tweet-front:${{ github.sha }}
        
      - name: kompose convert
        run: |
          cd ./docker/prod
          curl -L https://github.com/kubernetes/kompose/releases/download/v1.35.0/kompose-linux-amd64 -o kompose
          chmod +x ./kompose
          ./kompose convert

  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          # TODO A mettre dans les secrets
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
